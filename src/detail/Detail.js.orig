import React, {Component} from 'react';
import {GridList, GridTile} from 'material-ui/GridList';
import IconButton from 'material-ui/IconButton';
import StarBorder from 'material-ui/svg-icons/toggle/star-border';
import {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';

import consts from '../consts';
import {HotnessDisplay} from '../hotness/Hotness';

import './Detail.css';


class Detail extends Component {
    constructor(props) {
        super(props);

        this.state = {
            deets: null
        };

        this.handleFocusChange = this.handleFocusChange.bind(this);
    }

    handleFocusChange(focus) {
        return () => {
            this.setState({deets: null});
            const {updateFocus} = this.props;
            updateFocus(focus);
        };
    }

    componentDidMount() {
        const {location, map, params} = this.props;
        const service = new window.google.maps.places.PlacesService(map);
        service.getDetails({
            placeId: params.place_id
        }, callback.bind(this));

        function callback(results, status) {
            if (status === window.google.maps.places.PlacesServiceStatus.OK) {
                this.setState({
                    deets: results
                });
            } else {
                // TODO: Errors? I dgaf
            }
        }
    }

    render() {
        const {params} = this.props;
<<<<<<< HEAD
        const {deets} = this.state;
=======
        const {deets, foursquare} = this.state;

        const foursquareInfo = () => {
            if (!foursquare) return null;
            const hereNow = foursquare.hereNow;

            return (
                <Card>
                    <CardText>
                        {hereNow ? (
                            <span>
                                <p>
                                    <img style={{maxHeight:'25px'}}src={require('../img/Foursquare Social.png')}/>
                                    &nbsp; &nbsp;
                                    {hereNow.summary} (Check Ins: {hereNow.count})
                                </p>
                            </span>
                            ) : null}
                    </CardText>
                </Card>
            );
        };
>>>>>>> 0db52a227360b9bd4a53fab789a342b138ea1b5e

        let closing_time = 'N/A';
        if (deets && deets.opening_hours) {
            const date = new Date();
            const day = date.getDay();
            if (deets.opening_hours.periods[day]) {
                const hour = deets.opening_hours.periods[day]['close'].hours
                let minutes = deets.opening_hours.periods[day]['close'].minutes
                if (minutes.toString().length === 1) {
                    minutes = '0' + minutes;
                }
                closing_time = ((hour + 11) % 12 + 1) + ':'  + minutes;
                closing_time += hour >= 12 ? ' PM' : ' AM';
            }
        }
        // TODO: Some loading spinner bullshit
        return (
            <div className="Detail" style={{
                position: 'relative',
                paddingTop: '60px'
            }}>
                {deets ? (
                    <div>
                        <GridList cellHeight={180} cols={2.2}
                            style={{
                                display: 'flex',
                                flexWrap: 'nowrap',
                                overflowX: 'auto',
                            }}
                        >
                            {deets.photos?
                            deets.photos.map((photo, i) => (
                                <GridTile key={i}>
                                    <img src={photo.getUrl({'maxWidth': 300, 'maxHeight': 300})}/>
                                </GridTile>
                            )) : null
                            }
                        </GridList>
                        <Card>
<<<<<<< HEAD
                            <CardTitle title={deets.name} />
                            <CardText>
                                <p>Address: {deets.formatted_address}</p>
                                <p>Phone_number: <a href={"tel:" + deets.international_phone_number}>{deets.formatted_phone_number}</a></p>
                                <div> Closes at: {closing_time} </div>
                                <p>rating: <HotnessDisplay rating={deets.rating}/></p>
                                <p>price_level: {deets.price_level}</p>
                                {/* <p>reviews: {deets.reviews}</p> */}
                                <p>website: {deets.website}</p>
=======
                            <CardHeader
                                actAsExpander={true}
                                showExpandableButton={true}
                                title={<HotnessDisplay rating={deets.rating}/>}
                                subtitle={<div>{price_level} <br/> Closes at: {closing_time}<br/> {foursquareInfo()}</div>}
                                subtitleColor='#C58100'
                            />
                            <CardTitle
                                titleColor='#24A39A'
                                title={deets.name}
                                subtitle={
                                    <div>
                                        <a style={{color:'#FB3842'}} href={deets.website}>Website</a>
                                        <br/>
                                        <a style={{color:'#FB3842'}} href={"tel:" + deets.international_phone_number}>{deets.formatted_phone_number}</a>
                                    </div>
                                }
                            />
                            <CardText expandable={true}>
                                <div>Address: {deets.formatted_address}</div>
                                {deets.reviews ?
                                    deets.reviews.map((review) => (
                                        <Card>
                                            <CardHeader
                                                avatar={
                                                    <a href={review.author_url}>
                                                        <img style={{maxHeight:'50px'}}alt='' src={review.profile_photo_url}/>
                                                    </a>
                                                }
                                                title={review.author_name}
                                                subtitle={review.relative_time_description}
                                            />
                                            <CardText>
                                                {<HotnessDisplay rating={review.rating}/>}
                                                <div>
                                                    <Truncate
                                                        lines={!expanded && 2}
                                                        ellipsis={<span>... <a href='#' onClick={this.toggleLines.bind(this)}>More</a></span>}>
                                                        {review.text}
                                                    </Truncate>
                                                    {!truncated && expanded && (
                                                        <span> <a href='#' onClick={this.toggleLines.bind(this)}>Less</a></span>
                                                    )}
                                                </div>
                                            </CardText>
                                        </Card>
                                    )) : null
                                }
>>>>>>> 0db52a227360b9bd4a53fab789a342b138ea1b5e
                            </CardText>
                        </Card>
                    </div>
                ) : null
                }
            </div>
        );
    }
}

export default Detail;
